https://leetcode.com/problems/remove-k-digits/

//hints

//make ans string 
//push back in string 
//next check if pushed element is greater then the curr element then pop_back() it and decrement the k value 

Given string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num.

 

Example 1:

Input: num = "1432219", k = 3
Output: "1219"
Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.

----------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
public:
    string removeKdigits(string s, int k) {
        string ans="";
        int n=s.length();
        if(n<=k){
            return "0";
        }
        if(k==0){
            return s;
        }
       
        for(auto x:s){
            
            while(ans.length()!=0 and ans.back()>x and k!=0){
                ans.pop_back();
                k--;
            }
            
            if(ans.length()!=0 or x!='0'){
                
                ans.push_back(x);
            }
        }
        
        while(ans.length()!=0 and k--){
            ans.pop_back();
        }
        if(ans.length()==0){
            return "0";
        }
        return ans;
    }
};
