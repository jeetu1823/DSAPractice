Given the roots of two binary trees p and q, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.

 

Example 1:


Input: p = [1,2,3], q = [1,2,3]
Output: true



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int func(TreeNode *r,TreeNode* r2){
        
        if(r==NULL or r2==NULL)return r==r2;
        
        if(r->val !=r2->val  )return 0;
          
        return func(r->right,r2->right) and func(r->left,r2->left) ;
        
    }
    
    bool isSameTree(TreeNode* p, TreeNode* q) {
        
        return func(p ,q );
    }
};
