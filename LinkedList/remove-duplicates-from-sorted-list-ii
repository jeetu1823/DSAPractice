
https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/

Input: head = [1,2,3,3,4,4,5]
Output: [1,2,5]



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        
        if(head==NULL )return head;
        
      ListNode *dummy=new ListNode(0,head);
       ListNode *prev=dummy;
        
        ListNode*curr=head;
        
        while(curr!=NULL and curr->next!=NULL and curr->next->next!=NULL){
            
            
          if(curr->next!=NULL and curr->val==curr->next->val){
              
            while(curr->next!=NULL and curr->val==curr->next->val)curr=curr->next;                         
            
              
              prev->next=curr->next;
              
              }
            
           else prev=prev->next;
          
             
             curr=curr->next;
            
        }
        
        return dummy->next;
    }
};
