https://leetcode.com/problems/swap-nodes-in-pairs/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    ListNode *rec(ListNode *head){
        
        if(head==NULL or head<next==NULL){
            
            return head;
        }
        
        else {
            swap(head->val,head->next->val);
            rec(head->next->next);
        }
        
        return head;
    }
    
    ListNode* swapPairs(ListNode* head) {
  
        ListNode* curr=head;
        ListNode *nex=head;
        
        vector<int>v;
        
        while(nex !=NULL ){
           v.push_back(nex->val);
            nex=nex->next;
        }
        
        for(int i=0;i<v.size();i=i+2) {
         // cout<<v[i]<<" "<<i<<endl;
           if(i+1<v.size()) swap(v[i],v[i+1]);
        }
        
       //for(int i:v)cout<<i<<" ";
        int x=0;
           while(curr !=NULL ){
            curr->val=v[x];
               x++;
            curr=curr->next;
        }
        
        return rec(head);
    
    }
};
