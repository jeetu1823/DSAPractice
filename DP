https://leetcode.com/problems/minimum-path-sum/

Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

 

Example 1:


Input: grid = [[1,3,1],[1,5,1],[4,2,1]]
Output: 7
Explanation: Because the path 1 → 3 → 1 → 1 → 1 minimizes the sum.

---------------------------------------------
class Solution {
public:
    int dp[201][201];
    
    int solve(vector<vector<int>>&v,int i,int j){
        
        if(i==0 and j==0)return v[0][0];
        
        if(i<0 or j<0)return INT_MAX-100;
        if(dp[i][j]!=-1)return dp[i][j];
        
        int up=solve(v,i-1,j)+v[i][j];//intitally 2,2 pr hu waha se upr jaunga sum calculate krte huye 
        
        int left=solve(v,i,j-1)+v[i][j];//left jaunga sum calculate krte huye
        
        return dp[i][j]=min(up,left);
        
    }
    
    int minPathSum(vector<vector<int>>& ob) {
        memset(dp,-1,sizeof(dp));
        int m=ob.size(),n=ob[0].size();

        return solve(ob,m-1,n-1);
    }
};
-----------------------------------------
