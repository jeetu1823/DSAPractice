https://leetcode.com/problems/n-ary-tree-postorder-traversal/









/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
      
    
    vector<int>pre;
    
    void solve(Node *root){
        if(root==NULL)return;
        
        for(auto child:root->children) solve(child);
        pre.push_back(root->val);
    }
    vector<int> postorder(Node* root) {
       vector<int>pre2;
        if(root==NULL)return pre;
      stack<Node*>st;
        st.push(root);
        
        while(!st.empty()){
            
            auto it=st.top();
            st.pop();
            
            pre2.push_back(it->val);
            
            for(auto child:it->children){
                st.push(child);
        //cout<<child->val<<" ";
            }
            
        }
        
       reverse(pre2.begin(),pre2.end());
        
        // for(auto i:root->children)cout<<i->val<<" ";
        solve(root);
        return pre2;
    }
};
