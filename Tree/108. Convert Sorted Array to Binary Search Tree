




https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/







/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution
{
public:
    TreeNode *func(vector<int> &v, int l, int h)
    {

        if (l > h)
            return NULL;

        int mid = (l + h) / 2;
        TreeNode *root = new TreeNode(v[mid]);

        root->right = func(v, mid + 1, h);

        root->left = func(v, l, mid - 1);

        return root;
    }

    TreeNode *sortedArrayToBST(vector<int> &nums)
    {

        return func(nums, 0, nums.size() - 1);
    }
};
