 
https://leetcode.com/problems/binary-tree-paths/

Input: root = [1,2,3,null,5]
Output: ["1->2->5","1->3"]



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    vector<string>v;
    
     
    
    void func(TreeNode *root,string s){
       if(root==NULL)return;
        
        if((root->left == NULL) &&( root->right== NULL) ){
            s+=to_string(root->val);
            v.push_back(s);
           return;
        }
        
      s+=to_string(root->val);
        s+="->";
       func(root->left,s);
         
       func(root->right,s);
      
        
    }
    
    vector<string> binaryTreePaths(TreeNode* root) {
        // vector<int>temp;
        string s="";
        func(root,s);
//         for(auto i:v){
            
//             for(auto j:i)cout<<j<<" ";
            
//             cout<<endl;
//         }
        return v;
    }
};
