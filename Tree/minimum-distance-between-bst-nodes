https://leetcode.com/problems/minimum-distance-between-bst-nodes/
Given the root of a Binary Search Tree (BST), return the minimum difference between the values of any two different nodes in the tree.
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 
 
class Solution {
public:
    vector<int>v;  
    void solve(TreeNode *root,int &ans,int &pre){
        
        if(root==NULL)return    ;
        
            //p ðŸ˜‚ðŸ˜‚ðŸ˜‚
        
    if(root->left)solve(root->left,ans,pre);
        
         if(pre!=-1){
             
             ans=min(ans,abs(pre - root->val));
         }
        
        pre=root->val;
      
        if(root->right)solve(root->right,ans,pre);
         
        
        
         
    }
    
    int minDiffInBST(TreeNode* root) {
        int ans=INT_MAX;
        int pre=-1;
        solve(root,ans,pre);
      
        
        return ans ;
    }
};
