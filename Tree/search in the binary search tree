https://leetcode.com/problems/search-in-a-binary-search-tree/

You are given the root of a binary search tree (BST) and an integer val.

Find the node in the BST that the node's value equals val and return the subtree rooted with that node. 
If such a node does not exist, return null.


class Solution {
public:
    
    TreeNode*solve(TreeNode *root,int val){
        
        if(root==NULL)return NULL;
        
        if(root->val==val)return root;
        
        else if(root->val > val) return solve(root->left,val);
        else return solve(root->right,val);
        
        
        return NULL;
    }
    
    TreeNode* searchBST(TreeNode* root, int val) {
        
        
        return solve(root,val);
    }
};
