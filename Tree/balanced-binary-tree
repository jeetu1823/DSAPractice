

https://leetcode.com/problems/balanced-binary-tree/
 Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: true

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 
class Solution {
public:
    
    int solve(TreeNode *root){
        
        if(root==NULL)return 0;
        
        return 1+max(solve(root->left),solve(root->right));
    }
    
    bool isBalanced(TreeNode* root) {
     
        if(root==NULL)return true;
        
        bool left=isBalanced(root->left);
        bool right=isBalanced(root->right);
        
        if(left and right and abs(solve(root->left)-solve(root->right))<=1)return true;
         else return false;
        
      
        
       return true;
            
            
        
    }
    
};
