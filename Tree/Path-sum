




https://leetcode.com/problems/path-sum/
Input: root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22
Output: true
Explanation: The root-to-leaf path with the target sum is shown.






/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>>v;
    void solve(TreeNode *root,int t,vector<int> sum){
        
        if(root==NULL)return  ;
        
        if(root->left==NULL and root->right==NULL){
          sum.push_back(root->val);
            
            v.push_back(sum);
            return;
            
          
        }
        sum.push_back(root->val);
        
        solve(root->left,t,sum);
        solve(root->right,t,sum);
        
        
       
    }
    
    bool hasPathSum(TreeNode* root, int targetSum) {
        vector<int>sum;
       
        solve(root,targetSum,sum);
        
        for(auto i:v){
             int x=0;
            for(auto j:i) {
                
                x+=j;
                
               
            }
            
             if(x==targetSum)return 1;
        }
     return 0;    
    }
};
